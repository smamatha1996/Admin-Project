{"version":3,"sources":["utility/hooks/useSkin.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","@core/components/avatar/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","utility/Utils.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","utility/context/Can.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useLayout.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PublicRoute.js","router/routes/index.js","router/Router.js","App.js"],"names":["useSkin","dispatch","useDispatch","store","useSelector","state","layout","useEffect","element","window","document","body","classList","remove","skin","add","dark","bordered","setSkin","type","handleSkin","BlankLayout","useState","isMounted","setIsMounted","className","classnames","Customizer","props","isRtl","setIsRtl","isHidden","setLayout","navbarType","footerType","navbarColor","setIsHidden","contentWidth","menuCollapsed","setLastLayout","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","e","preventDefault","open","href","onClick","size","options","wheelPropagation","skinsArr","name","label","checked","map","radio","index","marginCondition","length","id","onChange","for","renderSkinsRadio","color","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","rest","visible","setVisible","addEventListener","pageYOffset","scroll","top","behavior","defaultProps","Footer","Date","getFullYear","target","rel","Avatar","forwardRef","ref","img","icon","status","badgeUp","content","Tag","tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","undefined","style","str","results","split","forEach","push","join","getInitials","pill","src","alt","height","width","UserDropdown","defaultAvatar","end","Link","to","divider","NavbarUser","ThemeNavbar","setMenuVisibility","ThemeToggler","isObjEmpty","obj","Object","keys","getUserData","JSON","parse","localStorage","getItem","getHomeRouteForLoggedInUser","userRole","DefaultRoute","VerticalMenuHeader","setGroupOpen","menuHover","user","Toggler","role","themeConfig","app","appLogoImage","appName","VerticalNavMenuLink","item","activeItem","LinkTag","externalLink","NavLink","disabled","active","navLink","newTab","isActive","title","badge","AbilityContext","createContext","hasActiveChild","createContextualCan","Consumer","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","indexOf","splice","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","canViewMenuGroup","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","onScrollY","container","scrollTop","current","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","value","handleRTL","useLayout","handleLayout","breakpoint","innerWidth","lastLayout","handleLastLayout","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","VerticalLayout","navbar","footer","menuVisibility","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","menuHidden","val","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","show","customizer","handleMenuHidden","handleContentWidth","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","data","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","usePopper","placement","modifiers","offset","update","attributes","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","routerProps","currentActiveItem","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","appLayout","Fragment","query","memo","PublicRoute","route","restrictedRoute","meta","restricted","fallback","getLayout","blank","vertical","horizontal","Home","lazy","SecondPage","Login","Register","ForgotPassword","Error","Routes","path","replace","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","Wrapper","getRouteMeta","Router","allRoutes","AllRoutes","layoutItem","getRoutes","useRoutes","App"],"mappings":"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","file":"static/js/8.7a614818.chunk.js","sourcesContent":["// ** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store Imports\nimport { handleSkin } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useSkin = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setSkin = (type) => {\n    dispatch(handleSkin(type))\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: \"dark-layout\",\n      bordered: \"bordered-layout\",\n      \"semi-dark\": \"semi-dark-layout\"\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (store.skin !== \"light\") {\n      element.classList.add(classNames[store.skin])\n    }\n  }, [store.skin])\n\n  return { skin: store.skin, setSkin }\n}\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\n\n// ** Custom Hooks\nimport { useSkin } from \"@hooks/useSkin\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\nconst BlankLayout = () => {\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  // ** Hooks\n  const { skin } = useSkin()\n\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\"blank-page\", {\n        \"dark-layout\": skin === \"dark\"\n      })}\n    >\n      <div className=\"app-content content\">\n        <div className=\"content-wrapper\">\n          <div className=\"content-body\">\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from \"react\"\n\n// ** Third Party Components\nimport Select from \"react-select\"\nimport classnames from \"classnames\"\nimport { Settings, X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\n// ** Reactstrap Imports\nimport { Input, Label } from \"reactstrap\"\n\n// ** Styles\nimport \"@styles/react/libs/react-select/_react-select.scss\"\n\nconst Customizer = (props) => {\n  // ** Props\n  const {\n    skin,\n    isRtl,\n    layout,\n    setSkin,\n    setIsRtl,\n    isHidden,\n    setLayout,\n    navbarType,\n    footerType,\n    navbarColor,\n    setIsHidden,\n    contentWidth,\n    menuCollapsed,\n    setLastLayout,\n    setNavbarType,\n    setFooterType,\n    setNavbarColor,\n    setContentWidth,\n    setMenuCollapsed\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = (e) => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: \"light\",\n        label: \"Light\",\n        checked: skin === \"light\"\n      },\n      {\n        name: \"bordered\",\n        label: \"Bordered\",\n        checked: skin === \"bordered\"\n      },\n      {\n        name: \"dark\",\n        label: \"Dark\",\n        checked: skin === \"dark\"\n      },\n      {\n        name: \"semi-dark\",\n        label: \"Semi Dark\",\n        checked: skin === \"semi-dark\"\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === \"horizontal\" && radio.name === \"semi-dark\") {\n        return null\n      }\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            id={radio.name}\n            checked={radio.checked}\n            onChange={() => setSkin(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = [\n      \"white\",\n      \"primary\",\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"info\",\n      \"warning\",\n      \"dark\"\n    ]\n\n    return colorsArr.map((color) => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === \"white\"\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: \"floating\",\n        label: \"Floating\",\n        checked: navbarType === \"floating\"\n      },\n      {\n        name: \"sticky\",\n        label: \"Sticky\",\n        checked: navbarType === \"sticky\"\n      },\n      {\n        name: \"static\",\n        label: \"Static\",\n        checked: navbarType === \"static\"\n      },\n      {\n        name: \"hidden\",\n        label: \"Hidden\",\n        checked: navbarType === \"hidden\"\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === \"horizontal\" && radio.name === \"hidden\") {\n        return null\n      }\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            id={radio.name}\n            checked={radio.checked}\n            onChange={() => setNavbarType(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: \"sticky\",\n        label: \"Sticky\",\n        checked: footerType === \"sticky\"\n      },\n      {\n        name: \"static\",\n        label: \"Static\",\n        checked: footerType === \"static\"\n      },\n      {\n        name: \"hidden\",\n        label: \"Hidden\",\n        checked: footerType === \"hidden\"\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <div\n          key={index}\n          className={classnames(\"form-check\", { \"mb-2 me-1\": marginCondition })}\n        >\n          <Input\n            type=\"radio\"\n            checked={radio.checked}\n            id={`footer-${radio.name}`}\n            onChange={() => setFooterType(radio.name)}\n          />\n          <Label className=\"form-check-label\" for={`footer-${radio.name}`}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classnames(\"customizer d-none d-md-block\", {\n        open: openCustomizer\n      })}\n    >\n      <a\n        href=\"/\"\n        className=\"customizer-toggle d-flex align-items-center justify-content-center\"\n        onClick={handleToggle}\n      >\n        <Settings size={14} className=\"spinner\" />\n      </a>\n      <PerfectScrollbar\n        className=\"customizer-content\"\n        options={{ wheelPropagation: false }}\n      >\n        <div className=\"customizer-header px-2 pt-1 pb-0 position-relative\">\n          <h4 className=\"mb-0\">Theme Customizer</h4>\n          <p className=\"m-0\">Customize & Preview in Real Time</p>\n          <a href=\"/\" className=\"customizer-close\" onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Skin</p>\n            <div className=\"d-flex\">{renderSkinsRadio()}</div>\n          </div>\n\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Content Width</p>\n            <div className=\"d-flex\">\n              <div className=\"form-check me-1\">\n                <Input\n                  type=\"radio\"\n                  id=\"full-width\"\n                  checked={contentWidth === \"full\"}\n                  onChange={() => setContentWidth(\"full\")}\n                />\n                <Label className=\"form-check-label\" for=\"full-width\">\n                  Full Width\n                </Label>\n              </div>\n              <div className=\"form-check\">\n                <Input\n                  id=\"boxed\"\n                  type=\"radio\"\n                  checked={contentWidth === \"boxed\"}\n                  onChange={() => setContentWidth(\"boxed\")}\n                />\n                <Label className=\"form-check-label\" for=\"boxed\">\n                  Boxed\n                </Label>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-switch mb-2 ps-0\">\n            <div className=\"d-flex\">\n              <p className=\"fw-bold me-auto mb-0\">RTL</p>\n              <Input\n                type=\"switch\"\n                id=\"rtl\"\n                name=\"RTL\"\n                checked={isRtl}\n                onChange={() => setIsRtl(!isRtl)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <p className=\"fw-bold\">Menu Layout</p>\n          <div className=\"mb-2\">\n            <div className=\"d-flex align-items-center\">\n              <div className=\"form-check me-1\">\n                <Input\n                  type=\"radio\"\n                  id=\"vertical-layout\"\n                  checked={layout === \"vertical\"}\n                  onChange={() => {\n                    setLayout(\"vertical\")\n                    setLastLayout(\"vertical\")\n                  }}\n                />\n                <Label className=\"form-check-label\" for=\"vertical-layout\">\n                  Vertical\n                </Label>\n              </div>\n              <div className=\"form-check\">\n                <Input\n                  type=\"radio\"\n                  id=\"horizontal-layout\"\n                  checked={layout === \"horizontal\"}\n                  onChange={() => {\n                    setLayout(\"horizontal\")\n                    setLastLayout(\"horizontal\")\n                  }}\n                />\n                <Label className=\"form-check-label\" for=\"horizontal-layout\">\n                  Horizontal\n                </Label>\n              </div>\n            </div>\n          </div>\n          {layout !== \"horizontal\" ? (\n            <div className=\"form-switch mb-2 ps-0\">\n              <div className=\"d-flex align-items-center\">\n                <p className=\"fw-bold me-auto mb-0\">Menu Collapsed</p>\n                <Input\n                  type=\"switch\"\n                  id=\"menu-collapsed\"\n                  name=\"menu-collapsed\"\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className=\"form-switch mb-2 ps-0\">\n            <div className=\"d-flex align-items-center\">\n              <p className=\"fw-bold me-auto mb-0\">Menu Hidden</p>\n              <Input\n                type=\"switch\"\n                id=\"menu-hidden\"\n                name=\"menu-hidden\"\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          {layout !== \"horizontal\" ? (\n            <div className=\"mb-2\">\n              <p className=\"fw-bold\">Navbar Color</p>\n              <ul className=\"list-inline unstyled-list\">\n                {renderNavbarColors()}\n              </ul>\n            </div>\n          ) : null}\n\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">\n              {layout === \"horizontal\" ? \"Menu\" : \"Navbar\"} Type\n            </p>\n            <div className=\"d-flex\">{renderNavbarTypeRadio()}</div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"px-2\">\n          <div className=\"mb-2\">\n            <p className=\"fw-bold\">Footer Type</p>\n            <div className=\"d-flex\">{renderFooterTypeRadio()}</div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** React Imports\nimport { useEffect, useState } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\n\nconst ScrollTop = (props) => {\n  // ** Props\n  const { showOffset, scrollBehaviour, children, ...rest } = props\n\n  // ** State\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener(\"scroll\", () => {\n        if (window.pageYOffset >= showOffset) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      })\n    }\n  }, [])\n\n  const handleScrollToTop = () => {\n    window.scroll({ top: 0, behavior: scrollBehaviour })\n  }\n\n  return (\n    visible && (\n      <div className=\"scroll-to-top\" onClick={handleScrollToTop} {...rest}>\n        {children}\n      </div>\n    )\n  )\n}\n\nexport default ScrollTop\n\n// ** PropTypes\nScrollTop.propTypes = {\n  showOffset: Proptypes.number,\n  children: Proptypes.any.isRequired,\n  scrollBehaviour: Proptypes.oneOf([\"smooth\", \"instant\", \"auto\"])\n}\n\nScrollTop.defaultProps = {\n  scrollBehaviour: \"smooth\"\n}\n","// ** Icons Import\nimport { Heart } from \"react-feather\"\n\nconst Footer = () => {\n  return (\n    <p className=\"clearfix mb-0\">\n      <span className=\"float-md-start d-block d-md-inline-block mt-25\">\n        COPYRIGHT © {new Date().getFullYear()}{\" \"}\n        <a\n          href=\"https://1.envato.market/pixinvent_portfolio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Pixinvent\n        </a>\n        <span className=\"d-none d-sm-inline-block\">, All rights Reserved</span>\n      </span>\n      <span className=\"float-md-end d-none d-md-block\">\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** React Imports\nimport { forwardRef } from \"react\"\n\n// ** Third Party Components\nimport Proptypes from \"prop-types\"\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = (str) => {\n    const results = []\n    const wordArray = str.split(\" \")\n    wordArray.forEach((e) => {\n      results.push(e[0])\n    })\n    return results.join(\"\")\n  }\n\n  return (\n    <Tag\n      className={classnames(\"avatar\", {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames(\"avatar-content\", {\n            \"position-relative\": badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge\n              color={badgeColor ? badgeColor : \"primary\"}\n              className=\"badge-sm badge-up\"\n              pill\n            >\n              {badgeText ? badgeText : \"0\"}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt=\"avatarImg\"\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf([\"sm\", \"lg\", \"xl\"]),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf([\"online\", \"offline\", \"away\", \"busy\"]),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"warning\",\n    \"dark\",\n    \"light-primary\",\n    \"light-secondary\",\n    \"light-success\",\n    \"light-danger\",\n    \"light-info\",\n    \"light-warning\",\n    \"light-dark\"\n  ]),\n  color: Proptypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"warning\",\n    \"dark\",\n    \"light-primary\",\n    \"light-secondary\",\n    \"light-success\",\n    \"light-danger\",\n    \"light-info\",\n    \"light-warning\",\n    \"light-dark\"\n  ]),\n  initials(props) {\n    if (props[\"initials\"] && props[\"content\"] === undefined) {\n      return new Error(\"content prop is required with initials prop.\")\n    }\n    if (props[\"initials\"] && typeof props[\"content\"] !== \"string\") {\n      return new Error(\"content prop must be a string.\")\n    }\n    if (\n      typeof props[\"initials\"] !== \"boolean\" &&\n      props[\"initials\"] !== undefined\n    ) {\n      return new Error(\"initials must be a boolean!\")\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: \"div\"\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\nimport { Link } from \"react-router-dom\"\n\n// ** Custom Components\nimport Avatar from \"@components/avatar\"\n\n// ** Third Party Components\nimport {\n  User,\n  Mail,\n  CheckSquare,\n  MessageSquare,\n  Settings,\n  CreditCard,\n  HelpCircle,\n  Power\n} from \"react-feather\"\n\n// ** Reactstrap Imports\nimport {\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem\n} from \"reactstrap\"\n\n// ** Default Avatar Image\nimport defaultAvatar from \"@src/assets/images/portrait/small/avatar-s-11.jpg\"\n\nconst UserDropdown = () => {\n  return (\n    <UncontrolledDropdown tag=\"li\" className=\"dropdown-user nav-item\">\n      <DropdownToggle\n        href=\"/\"\n        tag=\"a\"\n        className=\"nav-link dropdown-user-link\"\n        onClick={(e) => e.preventDefault()}\n      >\n        <div className=\"user-nav d-sm-flex d-none\">\n          <span className=\"user-name fw-bold\">John Doe</span>\n          <span className=\"user-status\">Admin</span>\n        </div>\n        <Avatar\n          img={defaultAvatar}\n          imgHeight=\"40\"\n          imgWidth=\"40\"\n          status=\"online\"\n        />\n      </DropdownToggle>\n      <DropdownMenu end>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <User size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Profile</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <Mail size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <CheckSquare size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <MessageSquare size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Chats</span>\n        </DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem\n          tag={Link}\n          to=\"/pages/\"\n          onClick={(e) => e.preventDefault()}\n        >\n          <Settings size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Settings</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <CreditCard size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Pricing</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/\" onClick={(e) => e.preventDefault()}>\n          <HelpCircle size={14} className=\"me-75\" />\n          <span className=\"align-middle\">FAQ</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to=\"/login\">\n          <Power size={14} className=\"me-75\" />\n          <span className=\"align-middle\">Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport UserDropdown from \"./UserDropdown\"\n\nconst NavbarUser = () => {\n  return (\n    <ul className=\"nav navbar-nav align-items-center ms-auto\">\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from \"react\"\n\n// ** Custom Components\nimport NavbarUser from \"./NavbarUser\"\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from \"reactstrap\"\n\nconst ThemeNavbar = (props) => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === \"dark\") {\n      return <Sun className=\"ficon\" onClick={() => setSkin(\"light\")} />\n    } else {\n      return <Moon className=\"ficon\" onClick={() => setSkin(\"dark\")} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"bookmark-wrapper d-flex align-items-center\">\n        <ul className=\"navbar-nav d-xl-none\">\n          <NavItem className=\"mobile-menu me-auto\">\n            <NavLink\n              className=\"nav-menu-main menu-toggle hidden-xs is-active\"\n              onClick={() => setMenuVisibility(true)}\n            >\n              <Menu className=\"ficon\" />\n            </NavLink>\n          </NavItem>\n        </ul>\n        <NavItem className=\"d-none d-lg-block\">\n          <NavLink className=\"nav-link-style\">\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { DefaultRoute } from \"../router/routes\"\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = (num) => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = (html) => html.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n// ** Checks if the passed date is today\nconst isToday = (date) => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (\n  value,\n  formatting = { month: \"short\", day: \"numeric\", year: \"numeric\" }\n) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat(\"en-US\", formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: \"short\", day: \"numeric\" }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: \"numeric\", minute: \"numeric\" }\n  }\n\n  return new Intl.DateTimeFormat(\"en-US\", formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem(\"userData\")\nexport const getUserData = () => JSON.parse(localStorage.getItem(\"userData\"))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = (userRole) => {\n  if (userRole === \"admin\") return DefaultRoute\n  if (userRole === \"client\") return \"/access-control\"\n  return \"/login\"\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = (theme) => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: \"#7367f01a\", // for option hover bg-color\n    primary: \"#7367f0\", // for selected option bg-color\n    neutral10: \"#7367f0\", // for tags bg-color\n    neutral20: \"#ededed\", // for input border-color\n    neutral30: \"#ededed\" // for input hover border-color\n  }\n})\n","// ** React Imports\nimport { useEffect } from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\n// ** Icons Imports\nimport { Disc, X, Circle } from \"react-feather\"\n\n// ** Config\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"@utils\"\n\nconst VerticalMenuHeader = (props) => {\n  // ** Props\n  const {\n    menuCollapsed,\n    setMenuCollapsed,\n    setMenuVisibility,\n    setGroupOpen,\n    menuHover\n  } = props\n\n  // ** Vars\n  const user = getUserData()\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour=\"toggle-icon\"\n          className=\"text-primary toggle-icon d-none d-xl-block\"\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour=\"toggle-icon\"\n          className=\"text-primary toggle-icon d-none d-xl-block\"\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className=\"navbar-header\">\n      <ul className=\"nav navbar-nav flex-row\">\n        <li className=\"nav-item me-auto\">\n          <NavLink\n            to={user ? getHomeRouteForLoggedInUser(user.role) : \"/\"}\n            className=\"navbar-brand\"\n          >\n            <span className=\"brand-logo\">\n              <img src={themeConfig.app.appLogoImage} alt=\"logo\" />\n            </span>\n            <h2 className=\"brand-text mb-0\">{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className=\"nav-item nav-toggle\">\n          <div className=\"nav-link modern-nav-toggle cursor-pointer\">\n            <Toggler />\n            <X\n              onClick={() => setMenuVisibility(false)}\n              className=\"toggle-icon icon-x d-block d-xl-none\"\n              size={20}\n            />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { NavLink } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Badge } from \"reactstrap\"\n\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? \"a\" : NavLink\n\n  // ** Hooks\n\n  return (\n    <li\n      className={classnames({\n        \"nav-item\": !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className=\"d-flex align-items-center\"\n        target={item.newTab ? \"_blank\" : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || \"/\",\n            }\n          : {\n              to: item.navLink || \"/\",\n              className: ({ isActive }) => {\n                if (isActive && !item.disabled) {\n                  return \"d-flex align-items-center active\";\n                }\n              },\n            })}\n        onClick={(e) => {\n          if (\n            item.navLink.length === 0 ||\n            item.navLink === \"#\" ||\n            item.disabled === true\n          ) {\n            e.preventDefault();\n          }\n        }}\n      >\n        {item.icon}\n        <span className=\"menu-item text-truncate\">{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className=\"ms-auto me-1\" color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  );\n};\n\nexport default VerticalNavMenuLink;\n","// ** Imports createContext function\nimport { createContext } from \"react\"\n\n// ** Imports createContextualCan function\nimport { createContextualCan } from \"@casl/react\"\n\n// ** Create Context\nexport const AbilityContext = createContext()\n\n// ** Init Can Context\nexport const Can = createContextualCan(AbilityContext.Consumer)\n","/* eslint-disable implicit-arrow-linebreak */\n// ** React Imports\nimport { useContext } from \"react\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = (item) => {\n  if (item.header) return \"VerticalNavMenuSectionHeader\"\n  if (item.children) return \"VerticalNavMenuGroup\"\n  return \"VerticalNavMenuLink\"\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = (item) => {\n  if (item.children) return \"HorizontalNavMenuGroup\"\n  return \"HorizontalNavMenuLink\"\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps &&\n      routerProps.meta &&\n      routerProps.meta.navLink &&\n      routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (\n      child &&\n      child.navLink &&\n      currentUrl &&\n      (child.navLink === currentUrl || currentUrl.includes(child.navLink))\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach((child) => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nconst checkForVisibleChild = (arr, ability) => {\n  return arr.some((i) => {\n    if (i.children) {\n      return checkForVisibleChild(i.children, ability)\n    } else {\n      return ability.can(i.action, i.resource)\n    }\n  })\n}\n\nexport const canViewMenuGroup = (item) => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild =\n    item.children && checkForVisibleChild(item.children, ability)\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = (item) => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from \"reactstrap\"\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from \"./VerticalNavMenuItems\"\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from \"@layouts/utils\"\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (\n      activeGroup.includes(item.id) ||\n      currentActiveGroup.includes(item.id)\n    ) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (\n        !activeGroup.includes(item.id) &&\n        currentActiveGroup.includes(item.id)\n      ) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = (id) => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (\n      groupActive.includes(id) &&\n      menuCollapsed &&\n      menuHover === false\n    ) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames(\"nav-item has-sub\", {\n        open: openClassCondition(item.id),\n        \"menu-collapsed-open\": groupActive.includes(item.id),\n        \"sidebar-group-active\":\n          groupActive.includes(item.id) ||\n          groupOpen.includes(item.id) ||\n          currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link\n        className=\"d-flex align-items-center\"\n        to=\"/\"\n        onClick={(e) => onCollapseClick(e, item)}\n      >\n        {item.icon}\n        <span className=\"menu-title text-truncate\">{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className=\"ms-auto me-1\" color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className=\"menu-content\">\n        <Collapse\n          isOpen={\n            (groupActive && groupActive.includes(item.id)) ||\n            (groupOpen && groupOpen.includes(item.id))\n          }\n        >\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from \"react-feather\"\n\nconst VerticalNavMenuSectionHeader = ({ item }) => {\n  return (\n    <li className=\"navigation-header\">\n      <span>{item.header}</span>\n      <MoreHorizontal className=\"feather-more-horizontal\" />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from \"./VerticalNavMenuLink\"\nimport VerticalNavMenuGroup from \"./VerticalNavMenuGroup\"\nimport VerticalNavMenuSectionHeader from \"./VerticalNavMenuSectionHeader\"\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from \"@layouts/utils\"\n\nconst VerticalMenuNavItems = (props) => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n    VerticalNavMenuSectionHeader\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return (\n        canViewMenuGroup(item) && (\n          <TagName item={item} index={index} key={item.id} {...props} />\n        )\n      )\n    }\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from \"react\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from \"./VerticalMenuHeader\"\nimport VerticalNavMenuItems from \"./VerticalNavMenuItems\"\n\nconst Sidebar = (props) => {\n  // ** Props\n  const { menuCollapsed, menu, skin, menuData } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    setMenuHover(true)\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = (container) => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains(\"d-block\")) {\n        shadowRef.current.classList.add(\"d-block\")\n      }\n    } else {\n      if (shadowRef.current.classList.contains(\"d-block\")) {\n        shadowRef.current.classList.remove(\"d-block\")\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames(\n          \"main-menu menu-fixed menu-accordion menu-shadow\",\n          {\n            expanded: menuHover || menuCollapsed === false,\n            \"menu-light\": skin !== \"semi-dark\" && skin !== \"dark\",\n            \"menu-dark\": skin === \"semi-dark\" || skin === \"dark\"\n          }\n        )}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu({ ...props })\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader\n              setGroupOpen={setGroupOpen}\n              menuHover={menuHover}\n              {...props}\n            />\n            {/* Vertical Menu Header Shadow */}\n            <div className=\"shadow-bottom\" ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className=\"main-menu-content\"\n              options={{ wheelPropagation: false }}\n              onScrollY={(container) => scrollMenu(container)}\n            >\n              <ul className=\"navigation navigation-main\">\n                <VerticalNavMenuItems\n                  items={menuData}\n                  menuData={menuData}\n                  menuHover={menuHover}\n                  groupOpen={groupOpen}\n                  activeItem={activeItem}\n                  groupActive={groupActive}\n                  setGroupOpen={setGroupOpen}\n                  menuCollapsed={menuCollapsed}\n                  setActiveItem={setActiveItem}\n                  setGroupActive={setGroupActive}\n                  currentActiveGroup={currentActiveGroup}\n                  setCurrentActiveGroup={setCurrentActiveGroup}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store & Actions\nimport { handleRTL } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector((state) => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = (value) => {\n    dispatch(handleRTL(value))\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName(\"html\")[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute(\"dir\", \"rtl\")\n    } else {\n      element.setAttribute(\"dir\", \"ltr\")\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","//** React Imports\nimport { useEffect } from \"react\"\n\n// ** Store Imports\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { handleLayout, handleLastLayout } from \"@store/layout\"\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setLayout = (value) => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = (value) => {\n    dispatch(handleLastLayout(value))\n  }\n\n  if (window) {\n    const breakpoint = 1200\n\n    useEffect(() => {\n      if (window.innerWidth < breakpoint) {\n        setLayout(\"vertical\")\n      }\n\n      window.addEventListener(\"resize\", () => {\n        if (\n          window.innerWidth <= breakpoint &&\n          store.lastLayout !== \"vertical\" &&\n          store.layout !== \"vertical\"\n        ) {\n          setLayout(\"vertical\")\n        }\n        if (\n          window.innerWidth >= breakpoint &&\n          store.lastLayout !== store.layout\n        ) {\n          setLayout(store.lastLayout)\n        }\n      })\n    }, [store.layout])\n  }\n\n  return {\n    layout: store.layout,\n    setLayout,\n    lastLayout: store.lastLayout,\n    setLastLayout\n  }\n}\n","// ** Store Imports\nimport { handleNavbarType } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setNavbarType = (type) => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n","// ** Store Imports\nimport { handleFooterType } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useFooterType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setFooterType = (type) => {\n    dispatch(handleFooterType(type))\n  }\n\n  return { setFooterType, footerType: store.footerType }\n}\n","// ** Store Imports\nimport { handleNavbarColor } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = (value) => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n","// ** React Imports\nimport { useState, useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  handleMenuCollapsed,\n  handleContentWidth,\n  handleMenuHidden\n} from \"@store/layout\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { ArrowUp } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Navbar, Button } from \"reactstrap\"\n\n// ** Configs\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Custom Components\n\nimport Customizer from \"@components/customizer\"\nimport ScrollToTop from \"@components/scrolltop\"\nimport FooterComponent from \"./components/footer\"\nimport NavbarComponent from \"./components/navbar\"\nimport SidebarComponent from \"./components/menu/vertical-menu\"\n\n// ** Custom Hooks\nimport { useRTL } from \"@hooks/useRTL\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport { useLayout } from \"@hooks/useLayout\"\nimport { useNavbarType } from \"@hooks/useNavbarType\"\nimport { useFooterType } from \"@hooks/useFooterType\"\nimport { useNavbarColor } from \"@hooks/useNavbarColor\"\n\n// ** Styles\nimport \"@styles/base/core/menu/menu-types/vertical-menu.scss\"\nimport \"@styles/base/core/menu/menu-types/vertical-overlay-menu.scss\"\n\nconst VerticalLayout = (props) => {\n  // ** Props\n  const { menu, navbar, footer, children, menuData } = props\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector((state) => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const isHidden = layoutStore.menuHidden\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = (val) => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = (val) => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = (val) => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener(\"resize\", handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: \"footer-static\",\n    sticky: \"footer-fixed\",\n    hidden: \"footer-hidden\"\n  }\n\n  const navbarWrapperClasses = {\n    floating: \"navbar-floating\",\n    sticky: \"navbar-sticky\",\n    static: \"navbar-static\",\n    hidden: \"navbar-hidden\"\n  }\n\n  const navbarClasses = {\n    floating:\n      contentWidth === \"boxed\" ? \"floating-nav container-xxl\" : \"floating-nav\",\n    sticky: \"fixed-top\",\n    static: \"navbar-static-top\",\n    hidden: \"d-none\"\n  }\n\n  const bgColorCondition =\n    navbarColor !== \"\" && navbarColor !== \"light\" && navbarColor !== \"white\"\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${\n          navbarWrapperClasses[navbarType] || \"navbar-floating\"\n        } ${footerClasses[footerType] || \"footer-static\"}`,\n        {\n          // Modern Menu\n          \"vertical-menu-modern\": windowWidth >= 1200,\n          \"menu-collapsed\": menuCollapsed && windowWidth >= 1200,\n          \"menu-expanded\": !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          \"vertical-overlay-menu\": windowWidth < 1200,\n          \"menu-hide\": !menuVisibility && windowWidth < 1200,\n          \"menu-open\": menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { \"data-col\": \"1-column\" } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n        />\n      ) : null}\n\n      <Navbar\n        expand=\"lg\"\n        container={false}\n        light={skin !== \"dark\"}\n        dark={skin === \"dark\" || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${\n            navbarClasses[navbarType] || \"floating-nav\"\n          } navbar-shadow`\n        )}\n      >\n        <div className=\"navbar-container d-flex content\">\n          {navbar ? (\n            navbar({ skin, setSkin, setMenuVisibility })\n          ) : (\n            <NavbarComponent\n              setMenuVisibility={setMenuVisibility}\n              skin={skin}\n              setSkin={setSkin}\n            />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames(\"sidenav-overlay\", {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          menuCollapsed={menuCollapsed}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n          setMenuCollapsed={setMenuCollapsed}\n        />\n      ) : null}\n      <footer\n        className={classnames(\n          `footer footer-light ${footerClasses[footerType] || \"footer-static\"}`,\n          {\n            \"d-none\": footerType === \"hidden\"\n          }\n        )}\n      >\n        {footer ? (\n          footer\n        ) : (\n          <FooterComponent\n            footerType={footerType}\n            footerClasses={footerClasses}\n          />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className=\"scroll-to-top\">\n          <ScrollToTop showOffset={300} className=\"scroll-top d-block\">\n            <Button className=\"btn-icon\" color=\"primary\">\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","import { Mail, Home } from \"react-feather\"\n\nexport default [\n  {\n    id: \"home\",\n    title: \"Home\",\n    icon: <Home size={20} />,\n    navLink: \"/home\"\n  },\n  {\n    id: \"secondPage\",\n    title: \"Second Page\",\n    icon: <Mail size={20} />,\n    navLink: \"/second-page\"\n  }\n]\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from \"@layouts/VerticalLayout\"\n\n// ** Menu Items Array\nimport navigation from \"@src/navigation/vertical\"\n\nconst VerticalLayout = (props) => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport { NavLink } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? \"a\" : NavLink\n\n  // ** Hooks\n\n  const handleClick = () => {\n    if (setMenuOpen) {\n      setMenuOpen(false)\n    }\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={classnames(\"nav-item\", {\n        disabled: item.disabled\n      })}\n    >\n      <LinkTag\n        className={classnames(\"d-flex align-items-center\", {\n          \"dropdown-item\": isChild,\n          \"nav-link\": !isChild\n        })}\n        target={item.newTab ? \"_blank\" : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || \"/\",\n            }\n          : {\n              to: item.navLink || \"/\",\n              className: ({ isActive }) => {\n                const commonClass = \"d-flex align-items-center\";\n                if (isActive && !item.disabled && item.navLink !== \"#\") {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item active`;\n                  } else {\n                    return `${commonClass} nav-link active`;\n                  }\n                } else {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item`;\n                  } else {\n                    return `${commonClass} nav-link`;\n                  }\n                }\n              },\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { useState } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { usePopper } from \"react-popper\"\n\n// ** Utils\nimport { hasActiveChild } from \"@layouts/utils\"\n\n// ** Hooks\nimport { useRTL } from \"@hooks/useRTL\"\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from \"./HorizontalNavMenuItems\"\n\nconst applyHeight = {\n  enabled: true,\n  name: \"applyHeight\",\n  phase: \"beforeWrite\",\n  fn: (data) => {\n    const pageHeight = window.innerHeight,\n      popperEl = data.state.elements.popper,\n      ddTop = popperEl.getBoundingClientRect().top,\n      ddHeight = popperEl.clientHeight\n    let maxHeight, stylesObj\n    // ** Calculate and set height\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\n      maxHeight = pageHeight - ddTop - 25\n      stylesObj = {\n        maxHeight,\n        overflowY: \"auto\"\n      }\n    }\n    const ddRef = popperEl.getBoundingClientRect()\n    // ** If there is not space left to open sub menu open it to the right\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n      popperEl.closest(\".dropdown\").classList.add(\"openLeft\")\n    }\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\n  }\n}\n\nconst HorizontalNavMenuGroup = (props) => {\n  // ** Props\n  const { item, submenu, isChild } = props\n\n  // ** State\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [popperElement, setPopperElement] = useState(null)\n  const [referenceElement, setReferenceElement] = useState(null)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** Vars\n  const popperOffsetHorizontal = isRtl ? 16 : -16\n  const popperPlacement = isRtl ? \"bottom-end\" : \"bottom-start\"\n  const popperPlacementSubMenu = isRtl ? \"left-start\" : \"right-start\"\n\n  // ** Hooks\n\n  const currentURL = useLocation().pathname\n  const { update, styles, attributes } = usePopper(\n    referenceElement,\n    popperElement,\n    {\n      placement: isChild ? popperPlacementSubMenu : popperPlacement,\n      modifiers: [\n        applyHeight,\n        {\n          enabled: true,\n          name: \"offset\",\n          options: {\n            offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\n          }\n        }\n      ]\n    }\n  )\n\n  const handleMouseEnter = () => {\n    setMenuOpen(true)\n    update()\n  }\n\n  return (\n    <li\n      ref={setReferenceElement}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={() => setMenuOpen(false)}\n      className={classnames(\"dropdown\", {\n        show: menuOpen,\n        \"nav-item\": submenu === false,\n        \"dropdown-submenu\": submenu === true,\n        \"sidebar-group-active active\": hasActiveChild(item, currentURL)\n      })}\n    >\n      <Link\n        to=\"/\"\n        onClick={(e) => e.preventDefault()}\n        className={classnames(\"dropdown-toggle d-flex align-items-center\", {\n          \"dropdown-item\": submenu === true,\n          \"nav-link\": submenu === false\n        })}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </Link>\n      <ul\n        ref={setPopperElement}\n        style={{ ...styles.popper }}\n        {...attributes.popper}\n        className={classnames(\"dropdown-menu\", {\n          \"first-level\": submenu === false\n        })}\n      >\n        <HorizontalNavMenuItems\n          isChild={true}\n          submenu={true}\n          parentItem={item}\n          menuOpen={menuOpen}\n          items={item.children}\n          setMenuOpen={setMenuOpen}\n        />\n      </ul>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from \"./HorizontalNavMenuLink\"\nimport HorizontalNavMenuGroup from \"./HorizontalNavMenuGroup\"\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from \"@layouts/utils\"\n\nconst HorizontalNavMenuItems = (props) => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return (\n        canViewMenuGroup(item) && (\n          <TagName item={item} index={index} key={item.id} {...props} />\n        )\n      )\n    }\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from \"./HorizontalNavMenuItems\"\n\nconst HorizontalMenu = ({ menuData }) => {\n  return (\n    <div className=\"navbar-container main-menu-content\">\n      <ul className=\"nav navbar-nav\" id=\"main-menu-navigation\">\n        <HorizontalNavMenuItems submenu={false} items={menuData} />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { Link } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { handleMenuHidden, handleContentWidth } from \"@store/layout\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\nimport { ArrowUp } from \"react-feather\"\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from \"reactstrap\"\n\n// ** Configs\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Custom Components\n\nimport Customizer from \"@components/customizer\"\nimport ScrollToTop from \"@components/scrolltop\"\nimport NavbarComponent from \"./components/navbar\"\nimport FooterComponent from \"./components/footer\"\nimport MenuComponent from \"./components/menu/horizontal-menu\"\n\n// ** Custom Hooks\nimport { useRTL } from \"@hooks/useRTL\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport { useLayout } from \"@hooks/useLayout\"\nimport { useNavbarType } from \"@hooks/useNavbarType\"\nimport { useFooterType } from \"@hooks/useFooterType\"\nimport { useNavbarColor } from \"@hooks/useNavbarColor\"\n\n// ** Styles\nimport \"@styles/base/core/menu/menu-types/horizontal-menu.scss\"\n\nconst HorizontalLayout = (props) => {\n  // ** Props\n  const { navbar, menuData, footer, children, menu } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector((state) => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = (val) => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = (val) => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener(\"scroll\", function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: \"footer-static\",\n    sticky: \"footer-fixed\",\n    hidden: \"footer-hidden\"\n  }\n\n  const navbarWrapperClasses = {\n    floating: \"navbar-floating\",\n    sticky: \"navbar-sticky\",\n    static: \"navbar-static\"\n  }\n\n  const navbarClasses = {\n    floating:\n      contentWidth === \"boxed\" ? \"floating-nav container-xxl\" : \"floating-nav\",\n    sticky: \"fixed-top\"\n  }\n\n  const bgColorCondition =\n    navbarColor !== \"\" && navbarColor !== \"light\" && navbarColor !== \"white\"\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${\n          navbarWrapperClasses[navbarType] || \"navbar-floating\"\n        } ${footerClasses[footerType] || \"footer-static\"} menu-expanded`\n      )}\n      {...(isHidden ? { \"data-col\": \"1-column\" } : {})}\n    >\n      <Navbar\n        expand=\"lg\"\n        container={false}\n        className={classnames(\n          \"header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center\",\n          {\n            \"navbar-scrolled\": navbarScrolled\n          }\n        )}\n      >\n        {!navbar && (\n          <div className=\"navbar-header d-xl-block d-none\">\n            <ul className=\"nav navbar-nav\">\n              <NavItem>\n                <Link to=\"/\" className=\"navbar-brand\">\n                  <span className=\"brand-logo\">\n                    <img src={themeConfig.app.appLogoImage} alt=\"logo\" />\n                  </span>\n                  <h2 className=\"brand-text mb-0\">{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className=\"navbar-container d-flex content\">\n          {navbar ? (\n            navbar({ skin, setSkin })\n          ) : (\n            <NavbarComponent skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className=\"horizontal-menu-wrapper\">\n          <Navbar\n            tag=\"div\"\n            expand=\"sm\"\n            light={skin !== \"dark\"}\n            dark={skin === \"dark\" || bgColorCondition}\n            className={classnames(\n              `header-navbar navbar-horizontal navbar-shadow menu-border`,\n              {\n                [navbarClasses[navbarType]]: navbarType !== \"static\",\n                \"floating-nav\":\n                  (!navbarClasses[navbarType] && navbarType !== \"static\") ||\n                  navbarType === \"floating\"\n              }\n            )}\n          >\n            {menu ? (\n              menu({ menuData, routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent menuData={menuData} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n        />\n      ) : null}\n      <footer\n        className={classnames(\n          `footer footer-light ${footerClasses[footerType] || \"footer-static\"}`,\n          {\n            \"d-none\": footerType === \"hidden\"\n          }\n        )}\n      >\n        {footer ? (\n          footer\n        ) : (\n          <FooterComponent\n            footerType={footerType}\n            footerClasses={footerClasses}\n          />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className=\"scroll-to-top\">\n          <ScrollToTop showOffset={300} className=\"scroll-top d-block\">\n            <Button className=\"btn-icon\" color=\"primary\">\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","import { Mail, Home } from \"react-feather\"\n\nexport default [\n  {\n    id: \"home\",\n    title: \"Home\",\n    icon: <Home size={20} />,\n    navLink: \"/home\"\n  },\n  {\n    id: \"secondPage\",\n    title: \"Second Page\",\n    icon: <Mail size={20} />,\n    navLink: \"/second-page\"\n  }\n]\n","// ** React Imports\nimport { Outlet } from \"react-router-dom\"\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from \"@layouts/HorizontalLayout\"\n\n// ** Menu Items Array\nimport navigation from \"@src/navigation/horizontal\"\n\nconst HorizontalLayout = (props) => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Fragment, useEffect, memo } from \"react\"\n\n// ** Third Party Components\nimport classnames from \"classnames\"\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  handleContentWidth,\n  handleMenuCollapsed,\n  handleMenuHidden\n} from \"@store/layout\"\n\n// ** ThemeConfig\nimport themeConfig from \"@configs/themeConfig\"\n\n// ** Styles\nimport \"animate.css/animate.css\"\n\nconst LayoutWrapper = (props) => {\n  // ** Props\n  const { children, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state)\n\n  const navbarStore = store.navbar\n  const layoutStored = store.layout.layout\n  const contentWidth = store.layout.contentWidth\n  //** Vars\n  const appLayoutCondition =\n    (layoutStored.layout === \"horizontal\" && !routeMeta) ||\n    (layoutStored.layout === \"horizontal\" && routeMeta && !routeMeta.appLayout)\n  const Tag = appLayoutCondition ? \"div\" : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (\n        routeMeta.contentWidth &&\n        routeMeta.contentWidth === store.layout.contentWidth\n      ) {\n        dispatch(handleContentWidth(themeConfig.layout.contentWidth))\n      }\n      if (\n        routeMeta.menuCollapsed &&\n        routeMeta.menuCollapsed === store.layout.menuCollapsed\n      ) {\n        dispatch(handleMenuCollapsed(!store.layout.menuCollapsed))\n      }\n      if (\n        routeMeta.menuHidden &&\n        routeMeta.menuHidden === store.layout.menuHidden\n      ) {\n        dispatch(handleMenuHidden(!store.layout.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [routeMeta])\n\n  return (\n    <div\n      className={classnames(\"app-content content overflow-hidden\", {\n        [routeMeta ? routeMeta.className : \"\"]:\n          routeMeta && routeMeta.className,\n        \"show-overlay\": navbarStore.query.length\n      })}\n    >\n      <div className=\"content-overlay\"></div>\n      <div className=\"header-navbar-shadow\" />\n      <div\n        className={classnames({\n          \"content-wrapper\": routeMeta && !routeMeta.appLayout,\n          \"content-area-wrapper\": routeMeta && routeMeta.appLayout,\n          \"container-xxl p-0\": contentWidth === \"boxed\"\n        })}\n      >\n        <Tag {...(appLayoutCondition ? { className: \"content-body\" } : {})}>\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(LayoutWrapper)\n","// ** React Imports\nimport { Suspense } from \"react\"\nimport { Navigate } from \"react-router-dom\"\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from \"@utils\"\n\nconst PublicRoute = ({ children, route }) => {\n  if (route) {\n    const user = getUserData()\n\n    const restrictedRoute = route.meta && route.meta.restricted\n\n    if (user && restrictedRoute) {\n      return <Navigate to={getHomeRouteForLoggedInUser(user.role)} />\n    }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PublicRoute\n","// ** React Imports\nimport { Fragment, lazy } from \"react\"\nimport { Navigate } from \"react-router-dom\"\n// ** Layouts\nimport BlankLayout from \"@layouts/BlankLayout\"\nimport VerticalLayout from \"@src/layouts/VerticalLayout\"\nimport HorizontalLayout from \"@src/layouts/HorizontalLayout\"\nimport LayoutWrapper from \"@src/@core/layouts/components/layout-wrapper\"\n\n// ** Route Components\nimport PublicRoute from \"@components/routes/PublicRoute\"\n\n// ** Utils\nimport { isObjEmpty } from \"@utils\"\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />\n}\n\n// ** Document title\nconst TemplateTitle = \"%s - Vuexy React Admin Template\"\n\n// ** Default Route\nconst DefaultRoute = \"/home\"\n\nconst Home = lazy(() => import(\"../../views/Home\"))\nconst SecondPage = lazy(() => import(\"../../views/SecondPage\"))\nconst Login = lazy(() => import(\"../../views/Login\"))\nconst Register = lazy(() => import(\"../../views/Register\"))\nconst ForgotPassword = lazy(() => import(\"../../views/ForgotPassword\"))\nconst Error = lazy(() => import(\"../../views/Error\"))\n\n// ** Merge Routes\nconst Routes = [\n  {\n    path: \"/\",\n    index: true,\n    element: <Navigate replace to={DefaultRoute} />\n  },\n  {\n    path: \"/home\",\n    element: <Home />\n  },\n  {\n    path: \"/second-page\",\n    element: <SecondPage />\n  },\n  {\n    path: \"/login\",\n    element: <Login />,\n    meta: {\n      layout: \"blank\"\n    }\n  },\n  {\n    path: \"/register\",\n    element: <Register />,\n    meta: {\n      layout: \"blank\"\n    }\n  },\n  {\n    path: \"/forgot-password\",\n    element: <ForgotPassword />,\n    meta: {\n      layout: \"blank\"\n    }\n  },\n  {\n    path: \"/error\",\n    element: <Error />,\n    meta: {\n      layout: \"blank\"\n    }\n  }\n]\n\nconst getRouteMeta = (route) => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return { routeMeta: route.meta }\n    } else {\n      return {}\n    }\n  }\n}\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = []\n\n  if (Routes) {\n    Routes.filter((route) => {\n      let isBlank = false\n      // ** Checks if Route layout or Default layout matches current layout\n      if (\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\n        ((route.meta === undefined || route.meta.layout === undefined) &&\n          defaultLayout === layout)\n      ) {\n        const RouteTag = PublicRoute\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === \"blank\" ? (isBlank = true) : (isBlank = false)\n        }\n        if (route.element) {\n          const Wrapper =\n            // eslint-disable-next-line multiline-ternary\n            isObjEmpty(route.element.props) && isBlank === false\n              ? // eslint-disable-next-line multiline-ternary\n                LayoutWrapper\n              : Fragment\n\n          route.element = (\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n              <RouteTag route={route}>{route.element}</RouteTag>\n            </Wrapper>\n          )\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route)\n      }\n      return LayoutRoutes\n    })\n  }\n  return LayoutRoutes\n}\n\nconst getRoutes = (layout) => {\n  const defaultLayout = layout || \"vertical\"\n  const layouts = [\"vertical\", \"horizontal\", \"blank\"]\n\n  const AllRoutes = []\n\n  layouts.forEach((layoutItem) => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\n\n    AllRoutes.push({\n      path: \"/\",\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    })\n  })\n  return AllRoutes\n}\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\n","// ** Router imports\nimport { useRoutes } from \"react-router-dom\"\n\n// ** GetRoutes\nimport { getRoutes } from \"./routes\"\n\n// ** Hooks Imports\nimport { useLayout } from \"@hooks/useLayout\"\n\nconst Router = () => {\n  // ** Hooks\n  const { layout } = useLayout()\n\n  const allRoutes = getRoutes(layout)\n\n  const routes = useRoutes([...allRoutes])\n\n  return routes\n}\n\nexport default Router\n","import React, { Suspense } from \"react\"\n\n// ** Router Import\nimport Router from \"./router/Router\"\n\nconst App = () => {\n  return (\n    <Suspense fallback={null}>\n      <Router />\n    </Suspense>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}